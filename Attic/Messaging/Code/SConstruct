from os import environ, path


def EmbedManifest(env, target):
    (EXE_TYPE, DLL_TYPE) = (1, 2)
    
    type = str(DLL_TYPE if str(target).endswith('.dll') else EXE_TYPE)
    manifest = '-manifest ${TARGET}.manifest'
    output = '-outputresource:$TARGET;' + type
    
    env.AddPostAction(target, 'mt -nologo %s %s' % (manifest, output))
    env.Clean(target, '%s.manifest' % target)


def Tools(env):
    tools = env['TOOLS']
    
    names = {
        'GNU': ['gcc', 'g++', 'mingw'],
        'MSVC': ['msvc'],
    }
    
    for (name, aliases) in names.items():
        for alias in aliases:
            if alias in tools:
                return name


np_api_sdk = environ['NP_API_SDK']

env = Environment(
    CPPDEFINES = ['MOZILLA_STRICT_API', 'XPCOM_GLUE'],
    CPPPATH = [path.join(np_api_sdk, 'include')],
    LIBPATH = [path.join(np_api_sdk, 'lib')],
    LIBS = ['xpcomglue'],
)

tools = Tools(env)
name = 'npMessaging'
files = Glob('*.cpp')

if tools == 'MSVC':
    files += env.RES(name + '.rc')
    env['WINDOWS_INSERT_DEF'] = True
    env.Append(CCFLAGS = ['/EHsc', '/MD'])
    env.Append(CPPDEFINES = ['_WIN32', '_WINDOWS', '_X86_', 'XP_WIN'])

lib = env.SharedLibrary(name, files)[0]

if tools == 'MSVC':
    EmbedManifest(env, lib)
